version: "3.9"

services:

  polling_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: polling_service
    env_file:
      - env/polling_service/.env
    ports:
      - "8002:8000"
    volumes:
      - ./logs:/app/logs
      - .:/app
    depends_on:
      polling_service_db:
        condition: service_healthy 
    restart: unless-stopped
    networks:
      - backend
  polling_service_db:
    image: postgres:15-alpine
    container_name: polling_service_db
    env_file:
      - env/polling_service/.env
    ports:
      - "5433:5432"
    volumes:
      - polling_service_db:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      
      
  users_service:
    image: sakibmondal7/users_module:latest
    container_name: users_service
    env_file:
      - env/users_service/.env
    ports:
      - "8001:8000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      users_service_db:
        condition: service_healthy 
    restart: unless-stopped
    networks:
      - backend

  users_service_db:
    image: postgres:15-alpine
    container_name: users_service_db
    env_file:
      - env/users_service/.env
    ports:
      - "5432:5432"
    volumes:
      - users_service_db:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  users_service_db:
  polling_service_db:

networks:
  backend:
    driver: bridge